%p
  We provide a way to add bikes via JSON posts to our API.

%h3
  Organization and access tokens

%p
  You have to submit an organization and an access token to post bikes to the Index.

%p
  We provide a test organization to add bikes via our API, so you can get started and figure out how to add bikes without having an organization access token.

- org = Organization.find_by_name('Example organization')


%dl.dl-horizontal.dl-wider-dt
  %dt#example_organization{ data: {slug: org.slug, token: org.access_token}}
    Test organization slug
  %dd
    = org.slug
  %dt
    Access token
  %dd
    = org.access_token

%article
  .alert.alert-info
    Test bikes are like normal bikes on the Index - you can edit them if they are sent to your account. There are a few key differences though:
    %ul.padded
      %li
        They do not send an email when they are created
      %li
        Are not visible in searches
      %li
        Are deleted every day or so.
%p
  There are a few things that need to be submitted in the POST request. This is the way the request is set up.


%article.code
  - request_url = api_v1_bikes_url
  %pre
    :plain
      $.ajax({
        type: "POST",
        url: "#{request_url}",
        data: {
          organization_slug: "#{org.slug}",
          access_token: "#{org.access_token}",
          bike: bike_hash,
          stolen_record: stolen_record_hash, // not required
          components: components_hash        // not required
        },
        success: function(data, textStatus, jqXHR) {
          $('#bike-standard').text(data)
        }
      });

%h3
  Creating a bike hash

%p
  The following attributes are required to create a bike:

%ul.doc-code-requirements
  %li
    %code
      serial_number
    string: "absent" if the bike doesn't have a serial number.
  %li
    %code
      manufacturer
    string: the name of the frame manufacturer
  %li
    %code
      color
    string: the color of the frame
  %li
    %code
      rear_wheel_bsd
    integer: rear wheel #{link_to "BSD", "#wheel_size_ref", class: "scroll-to-ref"}
  %li
    %code
      rear_tire_narrow
    boolean: whether the tire width is less than 32mm
  %li
    %code
      owner_email
    string: email that should receive the registration

%p
  Sample basic request

%article.code
  - request_url = api_v1_bikes_url
  %pre
    :plain
      bike_hash = {
        serial_number: "XOXO <3",
        manufacturer: "Surly",
        color: "Blue",
        rear_wheel_bsd: 559,
        rear_tire_narrow: false,
        owner_email: "new_bike_owner@bikeindex.org"
      };
      
      $.ajax({
        type: "POST",
        url: "#{request_url}",
        data: {
          organization_slug: "#{org.slug}",
          access_token: "#{org.access_token}",
          bike: bike_hash
        },
        success: function(data, textStatus, jqXHR) {
          $('#bike-standard').text(data)
        }
      });

  %p Response
  %pre#bike-basic{ data: {url: request_url }}
    - if Rails.env.production?
      :plain
        {
          "created": {
            "web_url": "#{link_to "https://bikeindex.org/bikes/1520", "https://bikeindex.org/bikes/1520"}",
            "api_url": "#{ link_to "https://bikeindex.org/api/v1/bikes/1520", "https://bikeindex.org/api/v1/bikes/1520"}"
          }
        }

/ description: "Has an under-seat beer opener and a handlebar flower vase",