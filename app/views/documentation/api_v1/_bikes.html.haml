%p
  We provide a way to add bikes via JSON posts to our API.

%p
  There are a few things that need to be submitted in the POST request.

/ %article.code
/   %p.code-label
/     POST request and possible parameters
/   - request_url = api_v1_bikes_url
/   %pre
/     :plain
/       $.ajax({
/         type: "POST",
/         url: "#{request_url}",
/         data: {
/           organization_slug: organization_slug,
/           access_token: org_access_token,
/           bike: bike_hash,
/           stolen_record: stolen_record_hash, // optional
/           components: components_hash        // optional
/         },
/       });


%article.code
  %table.table
    %tbody
      %tr
        %td
          %code
            organization_slug
        %td
          string
        %td
          The slug for the organization registering the bike.
      %tr
        %td
          %code
            access_token
        %td
          string
        %td
          The access token for the organization registering the bike.
      %tr
        %td
          %code
            bike_hash
        %td
          hash
        %td
          A hash of the bike's attributes
      %tr
        %td
          %code
            stolen_record
        %td
          hash
        %td
          Optional. A hash of information about the bike theft.
      %tr
        %td
          %code
            components
        %td
          array
        %td
          Optional. An array of hashes with attributes for the bike's components.

          
      
%h3#org_access
  Organization and access tokens

%p
  You have to submit an organization and an access token to post bikes to the Index.

%p
  We provide a test organization to add bikes via our API, so you can get started and figure out how to add bikes without having an organization access token.

- org = Organization.find_by_name('Example organization')


%dl.dl-horizontal.dl-wider-dt
  %dt#example_organization{ data: {slug: org.slug, token: org.access_token}}
    Test organization slug
  %dd
    = org.slug
  %dt
    Access token
  %dd
    = org.access_token

%article
  .alert.alert-info
    Test bikes behave like normal bikes on the Index in most ways. You can view them and you can edit them if they are sent to your email address. There are a few key differences though:
    %ul.key-differences
      %li
        No email is sent when they are created
      %li
        Are not visible in searches
      %li
        They're deleted every day or so.

%h3#bike_hash
  Bike hash

%p
  The following keys are required for a valid bike_hash

%article.code
  %table.table
    %tbody
      %tr
        %td
          %code
            serial_number
        %td
          string
        %td
          The bike's serial. Set to "absent" if the bike doesn't have a serial number.
      %tr
        %td
          %code
            manufacturer
        %td
          string
        %td
          The name of the frame manufacturer
      %tr
        %td
          %code
            color
        %td
          string
        %td
          The color of the frame
      %tr
        %td
          %code
            rear_wheel_bsd
        %td
          integer
        %td
          Rear wheel size, the tire's #{link_to "BSD", "#wheel_size_ref", class: "scroll-to-ref"}
      %tr
        %td
          %code
            rear_tire_narrow
        %td
          boolean
        %td
          Whether the tire width is less than 32mm
      %tr
        %td
          %code
            owner_email
        %td
          string
        %td
          email that should receive the registration

  %p.code-label
    Basic post including bike_hash

  - request_url = api_v1_bikes_url
  %pre
    :plain
      $.ajax({
        type: "POST",
        url: "#{request_url}",
        data: {
          organization_slug: "#{org.slug}",
          access_token: "#{org.access_token}",
          bike: {
            serial_number: "XOXO <3",
            manufacturer: "Surly",
            color: "Blue",
            rear_wheel_bsd: 559,
            rear_tire_narrow: false,
            owner_email: "new_bike_owner@bikeindex.org"
          }
        },
        success: function(data, textStatus, jqXHR) {
          $('#bike_basic').text(data)
        }
      });
%article.code
  %p.code-label
    Response
  %pre#bike_basic{ data: {url: request_url }}
    - if Rails.env.production?
      :plain
        {
          "created": {
            "web_url": "#{link_to "https://bikeindex.org/bikes/1520", "https://bikeindex.org/bikes/1520"}",
            "api_url": "#{ link_to "https://bikeindex.org/api/v1/bikes/1520", "https://bikeindex.org/api/v1/bikes/1520"}"
          }
        }
%p
  You can add some additional attributes to the bike hash if you want to.
%article.code
  %table.table
    %tbody
      %tr
        %td
          %code
            description
        %td
          text
        %td
          A description of the bike. This is searched, so it's a good idea add any distinguishing features.
      %tr
        %td
          %code
            cycle_type_slug
        %td
          string
        %td
          Can be any of the names from the list of #{link_to "cycle_types", "#cycle_types_ref"}. Defaults to "bike"
      %tr
        %td
          %code
            frame_material_slug
        %td
          string
        %td
          The type of material the frame is made from, chosen from #{link_to "frame_materials","#frame_materials_ref"}.
      %tr
        %td
          %code
            handlebar_type_slug
        %td
          string
        %td
          The slug of the handlebar type, chosen from the list of #{link_to "handlebar_types", "#handlebar_types_ref"}

/ description: "Has an under-seat beer opener and a handlebar flower vase",

%h3#stolen_bikes
  Adding stolen bikes


%p
  To make a bike stolen, you only need to add 
  %code
    stolen: true
  to the bike hash.

%p
  However, you can also add extra information about the bike theft to make a more accurate record.

%p
  The keys available for stolen bikes


%article.code
  %table.table

    %tbody
      %tr
        %td
          %code
            serial_number
        %td
          string
        %td
          The bike's serial. Set to "absent" if the bike doesn't have a serial number.
      %tr
        %td
          %code
            manufacturer
        %td
          string
        %td
          The name of the frame manufacturer
      %tr
        %td
          %code
            color
        %td
          string
        %td
          The color of the frame
      %tr
        %td
          %code
            rear_wheel_bsd
        %td
          integer
        %td
          Rear wheel size, the tire's #{link_to "BSD", "#wheel_size_ref", class: "scroll-to-ref"}
      %tr
        %td
          %code
            rear_tire_narrow
        %td
          boolean
        %td
          Whether the tire width is less than 32mm
      %tr
        %td
          %code
            owner_email
        %td
          string
        %td
          email that should receive the registration